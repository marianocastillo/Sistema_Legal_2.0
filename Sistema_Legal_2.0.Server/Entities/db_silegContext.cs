// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Sistema_Legal_2._0.Server.Entities;

public partial class db_silegContext : DbContext
{
    public db_silegContext(DbContextOptions<db_silegContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Estatus_Litigios> Estatus_Litigios { get; set; }

    public virtual DbSet<Litigios> Litigios { get; set; }

    public virtual DbSet<LogActividad> LogActividad { get; set; }

    public virtual DbSet<LogError> LogError { get; set; }

    public virtual DbSet<Modulos> Modulos { get; set; }

    public virtual DbSet<Perfiles> Perfiles { get; set; }

    public virtual DbSet<Ruta_archivos> Ruta_archivos { get; set; }

    public virtual DbSet<Tipo_Demanda> Tipo_Demanda { get; set; }

    public virtual DbSet<Tipo_Sentencia> Tipo_Sentencia { get; set; }

    public virtual DbSet<Tribunales> Tribunales { get; set; }

    public virtual DbSet<Usuarios> Usuarios { get; set; }

    public virtual DbSet<perfilesVistas> perfilesVistas { get; set; }

    public virtual DbSet<vistas> vistas { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Estatus_Litigios>(entity =>
        {
            entity.HasKey(e => e.ltg_estatus);

            entity.Property(e => e.ltg_description)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Litigios>(entity =>
        {
            entity.HasKey(e => e.id_Ltg);

            entity.Property(e => e.ltg_Cedula_Demandante)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.ltg_Cedula_Representante)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.ltg_Demandante)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ltg_Doc_Demandante)
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.ltg_Fecha_Acto).HasColumnType("datetime");
            entity.Property(e => e.ltg_Fecha_Actualizacion).HasColumnType("datetime");
            entity.Property(e => e.ltg_Fecha_Audiencia).HasColumnType("datetime");
            entity.Property(e => e.ltg_Nacionalidad)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ltg_Nombre_Representante)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ltg_Tipo_Demandante)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ltg_acto)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false);

            entity.HasOne(d => d.id_EstatusNavigation).WithMany(p => p.Litigios)
                .HasForeignKey(d => d.id_Estatus)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Litigios_Estatus_Litigios");

            entity.HasOne(d => d.id_SentenciaNavigation).WithMany(p => p.Litigios)
                .HasForeignKey(d => d.id_Sentencia)
                .HasConstraintName("FK_Litigios_Tipo_Sentencia");

            entity.HasOne(d => d.id_Tipo_DemandaNavigation).WithMany(p => p.Litigios)
                .HasForeignKey(d => d.id_Tipo_Demanda)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Litigios_Tipo_Demanda");

            entity.HasOne(d => d.id_TribunalNavigation).WithMany(p => p.Litigios)
                .HasForeignKey(d => d.id_Tribunal)
                .HasConstraintName("FK_Litigios_Tribunales");

            entity.HasOne(d => d.id_rutaNavigation).WithMany(p => p.Litigios)
                .HasForeignKey(d => d.id_ruta)
                .HasConstraintName("FK_Litigios_Ruta_archivos");

            entity.HasOne(d => d.id_usuarioNavigation).WithMany(p => p.Litigios)
                .HasForeignKey(d => d.id_usuario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Litigios_Usuarios");
        });

        modelBuilder.Entity<LogActividad>(entity =>
        {
            entity.HasKey(e => e.idLog);

            entity.Property(e => e.Data).IsUnicode(false);
            entity.Property(e => e.Fecha).HasColumnType("datetime");
            entity.Property(e => e.Metodo)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.URL)
                .IsRequired()
                .HasMaxLength(350)
                .IsUnicode(false);
        });

        modelBuilder.Entity<LogError>(entity =>
        {
            entity.HasKey(e => e.idLogError);

            entity.Property(e => e.Fecha).HasColumnType("datetime");
            entity.Property(e => e.Mensaje)
                .IsRequired()
                .IsUnicode(false);
            entity.Property(e => e.Origen)
                .IsRequired()
                .HasMaxLength(300)
                .IsUnicode(false);
            entity.Property(e => e.StackTrace)
                .IsRequired()
                .IsUnicode(false);
            entity.Property(e => e.Tipo)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Modulos>(entity =>
        {
            entity.HasKey(e => e.idModulo);

            entity.Property(e => e.Descripcion)
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.Icono)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Perfiles>(entity =>
        {
            entity.HasKey(e => e.idPerfil);

            entity.Property(e => e.Descripcion)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.nombre)
                .HasMaxLength(50)
                .IsUnicode(false);
        });


        modelBuilder.Entity<Ruta_archivos>(entity =>
        {
            entity.HasKey(e => e.id_Ruta).HasName("PK_t_ruta_archivos");

            entity.Property(e => e.Ruta)
                .IsRequired()
                .HasMaxLength(200);
        });

        modelBuilder.Entity<Tipo_Demanda>(entity =>
        {
            entity.HasKey(e => e.id_demanda);

            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(150);
        });

        modelBuilder.Entity<Tipo_Sentencia>(entity =>
        {
            entity.HasKey(e => e.id_Sentencia);

            entity.Property(e => e.desc_Sentencia)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Tribunales>(entity =>
        {
            entity.HasKey(e => e.Id_Tribunal);

            entity.Property(e => e.Descripcion)
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.Direccion).HasMaxLength(200);
            entity.Property(e => e.Latitud).HasColumnType("decimal(10, 8)");
            entity.Property(e => e.Longitud).HasColumnType("decimal(10, 8)");
            entity.Property(e => e.Nombre_Tribunal)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.Telefono)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<Usuarios>(entity =>
        {
            entity.HasKey(e => e.idUsuario);

            entity.Property(e => e.Cedula)
                .IsRequired()
                .HasMaxLength(13)
                .IsUnicode(false);
            entity.Property(e => e.NombreUsuario)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.apellidos)
                .IsRequired()
                .HasMaxLength(100)
                .IsFixedLength();
            entity.Property(e => e.fechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.nombres)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.HasOne(d => d.idPerfilNavigation).WithMany(p => p.Usuarios)
                .HasForeignKey(d => d.idPerfil)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Usuarios_Perfiles");
        });

        modelBuilder.Entity<perfilesVistas>(entity =>
        {
            entity.HasKey(e => e.idPerfilVista);

            entity.HasOne(d => d.idPerfilNavigation).WithMany(p => p.perfilesVistas)
                .HasForeignKey(d => d.idPerfil)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_perfilesVistas_Perfiles");

            entity.HasOne(d => d.idVistaNavigation).WithMany(p => p.perfilesVistas)
                .HasForeignKey(d => d.idVista)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_perfilesVistas_vistas");
        });

        modelBuilder.Entity<vistas>(entity =>
        {
            entity.HasKey(e => e.idVista);

            entity.Property(e => e.Icono)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.descripcion)
                .HasMaxLength(150)
                .IsUnicode(false);
            entity.Property(e => e.nombre)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.url)
                .HasMaxLength(300)
                .IsUnicode(false);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}