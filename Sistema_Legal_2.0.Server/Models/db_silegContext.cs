// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Sistema_Legal_2._0.Server.Models;
using Sistema_Legal_2._0.Server.Models;
using Sistema_Legal_2.Server.Models;

namespace Sistema_Legal_2._0.Server.Models;

public partial class db_silegContext : DbContext
{
    public db_silegContext()
    {
    }

    public db_silegContext(DbContextOptions<db_silegContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Estatus_Litigios> Estatus_Litigios { get; set; }

    public virtual DbSet<Litigios> Litigios { get; set; }

    public virtual DbSet<LogActividad> LogActividad { get; set; }

    public virtual DbSet<LogError> LogError { get; set; }

    public virtual DbSet<Perfiles> Perfiles { get; set; }

    public virtual DbSet<Tipo_Sentencia> Tipo_Sentencia { get; set; }

    public virtual DbSet<Usuarios> Usuarios { get; set; }

    public virtual DbSet<perfilesVistas> perfilesVistas { get; set; }

    public virtual DbSet<t_ruta_archivos> t_ruta_archivos { get; set; }

    public virtual DbSet<vistas> vistas { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=192.168.3.81;Initial Catalog=db_sileg;Integrated Security=True");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.UseCollation("SQL_Latin1_General_CP1_CI_AS");

        modelBuilder.Entity<Estatus_Litigios>(entity =>
        {
            entity.HasKey(e => e.ltg_estatus);

            entity.Property(e => e.ltg_description)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Litigios>(entity =>
        {
            entity.HasKey(e => e.id_Ltg);

            entity.Property(e => e.ltg_acto)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.ltg_fecha).HasColumnType("datetime");
            entity.Property(e => e.ltg_fecha_litigio).HasColumnType("datetime");
        });

        modelBuilder.Entity<LogActividad>(entity =>
        {
            entity.HasKey(e => e.idLog);

            entity.Property(e => e.Data).IsUnicode(false);
            entity.Property(e => e.Fecha).HasColumnType("datetime");
            entity.Property(e => e.Metodo)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.URL)
                .IsRequired()
                .HasMaxLength(350)
                .IsUnicode(false);
        });

        modelBuilder.Entity<LogError>(entity =>
        {
            entity.HasKey(e => e.idLogError);

            entity.Property(e => e.Fecha).HasColumnType("datetime");
            entity.Property(e => e.Mensaje)
                .IsRequired()
                .IsUnicode(false);
            entity.Property(e => e.Origen)
                .IsRequired()
                .HasMaxLength(300)
                .IsUnicode(false);
            entity.Property(e => e.StackTrace)
                .IsRequired()
                .IsUnicode(false);
            entity.Property(e => e.Tipo)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Perfiles>(entity =>
        {
            entity.HasKey(e => e.idPerfil);

            entity.Property(e => e.Descripcion)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.nombre)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Tipo_Sentencia>(entity =>
        {
            entity.HasKey(e => e.id_Sentencia);

            entity.Property(e => e.desc_Sentencia)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Usuarios>(entity =>
        {
            entity.HasKey(e => e.idUsuario);

            entity.Property(e => e.apellidos)
                .HasMaxLength(100)
                .IsFixedLength();
            entity.Property(e => e.fechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.nombres)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.usuario)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<perfilesVistas>(entity =>
        {
            entity.HasKey(e => e.idPerfilVista);
        });

        modelBuilder.Entity<t_ruta_archivos>(entity =>
        {
            entity.HasKey(e => e.rua_id);

            entity.Property(e => e.rua_contrasena).HasMaxLength(100);
            entity.Property(e => e.rua_descripcion).HasMaxLength(100);
            entity.Property(e => e.rua_ruta).HasMaxLength(100);
            entity.Property(e => e.rua_usuario).HasMaxLength(50);
        });

        modelBuilder.Entity<vistas>(entity =>
        {
            entity.HasKey(e => e.idVista);

            entity.Property(e => e.descripcion)
                .HasMaxLength(150)
                .IsUnicode(false);
            entity.Property(e => e.nombre)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.url)
                .HasMaxLength(300)
                .IsUnicode(false);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}