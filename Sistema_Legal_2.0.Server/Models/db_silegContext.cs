// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Sistema_Legal_2._0.Server.Models;

public partial class db_silegContext : DbContext
{
    public db_silegContext()
    {
    }

    public db_silegContext(DbContextOptions<db_silegContext> options)
        : base(options)
    {
    }

    public virtual DbSet<EstatusLitigios> EstatusLitigios { get; set; }

    public virtual DbSet<Litigios> Litigios { get; set; }

    public virtual DbSet<LogActividad> LogActividad { get; set; }

    public virtual DbSet<LogError> LogError { get; set; }

    public virtual DbSet<Logins> Logins { get; set; }

    public virtual DbSet<Modulos> Modulos { get; set; }

    public virtual DbSet<Perfiles> Perfiles { get; set; }

    public virtual DbSet<PerfilesVistas> PerfilesVistas { get; set; }

    public virtual DbSet<TRutaArchivos> TRutaArchivos { get; set; }

    public virtual DbSet<TipoDemanda> TipoDemanda { get; set; }

    public virtual DbSet<TipoSentencia> TipoSentencia { get; set; }

    public virtual DbSet<Usuarios> Usuarios { get; set; }

    public virtual DbSet<Vistas> Vistas { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=192.168.3.81;Initial Catalog=db_sileg;Encrypt=False; Integrated Security=True");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.UseCollation("SQL_Latin1_General_CP1_CI_AS");

        modelBuilder.Entity<EstatusLitigios>(entity =>
        {
            entity.HasKey(e => e.LtgEstatus);

            entity.ToTable("Estatus_Litigios");

            entity.Property(e => e.LtgEstatus).HasColumnName("ltg_estatus");
            entity.Property(e => e.LtgDescription)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ltg_description");
        });

        modelBuilder.Entity<Litigios>(entity =>
        {
            entity.HasKey(e => e.IdLtg);

            entity.Property(e => e.IdLtg).HasColumnName("id_Ltg");
            entity.Property(e => e.DocDemandante)
                .IsRequired()
                .HasMaxLength(11)
                .IsUnicode(false)
                .HasColumnName("doc_demandante");
            entity.Property(e => e.IdEstatus).HasColumnName("id_Estatus");
            entity.Property(e => e.IdSentencia).HasColumnName("id_sentencia");
            entity.Property(e => e.Ltg)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("ltg");
            entity.Property(e => e.LtgActo)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("ltg_acto");
            entity.Property(e => e.LtgFecha)
                .HasColumnType("datetime")
                .HasColumnName("ltg_fecha");
            entity.Property(e => e.LtgFechaLitigio)
                .HasColumnType("datetime")
                .HasColumnName("ltg_fecha_litigio");
        });

        modelBuilder.Entity<LogActividad>(entity =>
        {
            entity.HasKey(e => e.IdLog);

            entity.Property(e => e.IdLog).HasColumnName("idLog");
            entity.Property(e => e.Data).IsUnicode(false);
            entity.Property(e => e.Fecha).HasColumnType("datetime");
            entity.Property(e => e.IdUsuario).HasColumnName("idUsuario");
            entity.Property(e => e.Metodo)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Url)
                .IsRequired()
                .HasMaxLength(350)
                .IsUnicode(false)
                .HasColumnName("URL");
        });

        modelBuilder.Entity<LogError>(entity =>
        {
            entity.HasKey(e => e.IdLogError);

            entity.Property(e => e.IdLogError).HasColumnName("idLogError");
            entity.Property(e => e.Fecha).HasColumnType("datetime");
            entity.Property(e => e.IdUsuario).HasColumnName("idUsuario");
            entity.Property(e => e.Mensaje)
                .IsRequired()
                .IsUnicode(false);
            entity.Property(e => e.Origen)
                .IsRequired()
                .HasMaxLength(300)
                .IsUnicode(false);
            entity.Property(e => e.StackTrace)
                .IsRequired()
                .IsUnicode(false);
            entity.Property(e => e.Tipo)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Logins>(entity =>
        {
            entity.HasKey(e => e.LogginUsuario).HasName("PK__Logins__3214EC074180EEAC");

            entity.Property(e => e.LogginUsuario).HasMaxLength(50);
            entity.Property(e => e.Contraseña)
                .IsRequired()
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.FechaHora)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");

            entity.HasOne(d => d.IdUsuarioNavigation).WithMany(p => p.Logins)
                .HasForeignKey(d => d.IdUsuario)
                .HasConstraintName("FK__Logins__UsuarioI__42ACE4D4");
        });

        modelBuilder.Entity<Modulos>(entity =>
        {
            entity.HasKey(e => e.IdModulo);

            entity.Property(e => e.IdModulo).HasColumnName("idModulo");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.Icono)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Perfiles>(entity =>
        {
            entity.HasKey(e => e.IdPerfil);

            entity.Property(e => e.IdPerfil).HasColumnName("idPerfil");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Nombre)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nombre");
            entity.Property(e => e.PorDefecto).HasColumnName("porDefecto");
        });

        modelBuilder.Entity<PerfilesVistas>(entity =>
        {
            entity.HasKey(e => e.IdPerfilVista);

            entity.ToTable("perfilesVistas");

            entity.Property(e => e.IdPerfilVista).HasColumnName("idPerfilVista");
            entity.Property(e => e.IdPerfil).HasColumnName("idPerfil");
            entity.Property(e => e.IdVista).HasColumnName("idVista");
        });

        modelBuilder.Entity<TRutaArchivos>(entity =>
        {
            entity.HasKey(e => e.RuaId);

            entity.ToTable("t_ruta_archivos");

            entity.Property(e => e.RuaId).HasColumnName("rua_id");
            entity.Property(e => e.EstId).HasColumnName("est_id");
            entity.Property(e => e.RuaContrasena)
                .HasMaxLength(100)
                .HasColumnName("rua_contrasena");
            entity.Property(e => e.RuaDescripcion)
                .HasMaxLength(100)
                .HasColumnName("rua_descripcion");
            entity.Property(e => e.RuaRuta)
                .HasMaxLength(100)
                .HasColumnName("rua_ruta");
            entity.Property(e => e.RuaUsuario)
                .HasMaxLength(50)
                .HasColumnName("rua_usuario");
        });

        modelBuilder.Entity<TipoDemanda>(entity =>
        {
            entity.HasKey(e => e.IdDemanda);

            entity.ToTable("Tipo_Demanda");

            entity.Property(e => e.IdDemanda).HasColumnName("id_demanda");
            entity.Property(e => e.IdEstatus).HasColumnName("id_Estatus");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(150);
        });

        modelBuilder.Entity<TipoSentencia>(entity =>
        {
            entity.HasKey(e => e.IdSentencia);

            entity.ToTable("Tipo_Sentencia");

            entity.Property(e => e.IdSentencia).HasColumnName("id_Sentencia");
            entity.Property(e => e.DescSentencia)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("desc_Sentencia");
        });

        modelBuilder.Entity<Usuarios>(entity =>
        {
            entity.HasKey(e => e.IdUsuario);

            entity.Property(e => e.IdUsuario).HasColumnName("idUsuario");
            entity.Property(e => e.Apellidos)
                .HasMaxLength(100)
                .IsFixedLength()
                .HasColumnName("apellidos");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.IdLoggin)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.IdPerfil).HasColumnName("idPerfil");
            entity.Property(e => e.Nombres)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nombres");

            entity.HasOne(d => d.IdLogginNavigation).WithMany(p => p.Usuarios)
                .HasForeignKey(d => d.IdLoggin)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Usuarios_Usuarios");
        });

        modelBuilder.Entity<Vistas>(entity =>
        {
            entity.HasKey(e => e.IdVista);

            entity.ToTable("vistas");

            entity.Property(e => e.IdVista).HasColumnName("idVista");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("descripcion");
            entity.Property(e => e.Icono)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.IdModulo).HasColumnName("idModulo");
            entity.Property(e => e.IdPadre).HasColumnName("idPadre");
            entity.Property(e => e.Nombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nombre");
            entity.Property(e => e.Url)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("url");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}